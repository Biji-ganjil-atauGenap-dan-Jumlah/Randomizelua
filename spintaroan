local r={"\066\067\107\101\069\086\061\061";"\102\053\066\061";3600,"\051\111\043\049\066\090\099\055\069\109\097\085";"\110\068\061\061";13;"\071\051\050\101\047\119\068\122\102\074\068\122\048\119\083\065\099\050\056\065\102\057\086\065\099\105\056\080\099\105\049\065\099\057\068\061";256,"\052\121\118\082\048\057\099\049","\103\109\075\106\069\089\043\120\048\121\097\077\069\053\043\120\103\089\075\106\102\121\103\122";"\105\053\050\112\069\067\048\081\069\053\066\065\102\053\075\049";"\120\067\050\049\071\089\075\053\071\111\097\049\069\109\097\085\071\089\117\049\071\115\099\079\048\119\107\082\048\121\050\056\047\119\107\087\069\109\122\079\048\106\107\049\069\106\107\082\103\089\075\083\071\090\099\077\103\068\061\061","\120\067\050\049\071\089\075\053\071\111\097\049\069\109\097\085\071\089\117\049\071\115\117\082\103\119\107\082\048\121\050\056\047\119\107\087\069\109\122\079\048\106\107\049\069\106\107\082\103\089\075\083\071\090\099\077\103\068\061\061";11672421;"";16711680,"\104\115\081\082\102\082\098\088\110\115\110\049\097\082\105\088\110\082\066\082\110\115\086\088\116\120\056\118\116\115\066\106\104\074\107\119\069\067\086\065\050\089\117\082\052\106\101\057\069\067\099\055\048\119\056\061","\102\109\075\055\069\067\071\061","\050\121\118\085\069\053\075\067\069\065\061\061","\066\067\050\074";"\054\068\061\061",true,"\069\053\117\112\048\086\061\061",60;"\072\074\098\080\102\053\117\079\048\109\099\101\069\053\066\080\071\090\050\051\105\056\075\051\071\115\081\074\102\121\118\087\102\053\117\079\048\082\098\113\072\065\061\061","\102\057\050\049\069\070\075\084\069\109\088\055\048\121\097\049","\103\057\097\122","\048\089\122\053\048\065\061\061";"\051\089\122\087\052\090\088\077\102\121\086\061";"\108\111\083\081\072\074\098\061";"\050\057\107\056\102\057\043\122\050\053\050\106\066\109\122\077\069\065\061\061";12452733,"\120\089\075\087\052\121\118\089\102\121\122\055","\119\074\098\113\104\115\081\087\103\090\050\073\102\109\088\101\069\121\117\049\052\121\075\079\116\084\090\088\116\115\090\073\116\115\090\070\097\115\065\070\110\115\090\049\110\082\086\049\097\082\065\100\071\090\122\110\120\090\050\111\086\105\083\065\086\105\097\105\051\050\048\099\050\117\056\065\043\090\050\105\043\105\097\105\043\105\086\065\104\115\081\087\103\090\050\073\102\109\088\101\069\121\117\049\052\121\075\079\116\084\090\088\116\115\090\073\116\115\090\070\097\115\065\070\110\115\090\049\110\082\086\049\097\082\065\100\119\056\122\089\071\117\122\104\050\051\107\120\043\105\105\065\050\090\101\099\105\106\083\065\105\090\088\117\086\050\097\117\071\090\097\104\120\122\043\107\086\070\086\065\050\090\101\117\071\117\107\117\105\122\097\104\120\074\107\104\120\074\107\119\043\105\088\104\050\083\098\078\116\053\043\081\066\109\097\077\066\053\086\080\110\120\090\073\110\120\065\073\097\084\086\070\116\120\110\049\110\082\105\049\116\115\086\049\097\084\073\098\069\067\103\079\048\057\071\081\116\074\107\056\054\057\107\079\119\084\083\080\048\089\122\082\102\109\075\106\048\115\098\088\110\120\065\088\116\115\065\109\097\115\105\118\110\082\086\082\097\120\086\073\097\115\086\109\104\074\101\084\069\106\070\077\103\109\118\122\066\074\056\080\071\089\101\101\052\121\118\122\069\053\075\049\048\053\075\070\069\053\086\113\072\065\061\061","\048\053\075\077\103\089\050\106","\108\068\061\061",7,"\066\109\117\112\048\086\061\061",10;"\120\067\050\049\071\089\075\053\071\111\097\049\069\109\097\085\071\089\122\079\071\089\075\079\048\051\107\077\048\074\107\049\052\089\105\065\066\109\050\122\048\111\110\055\071\090\103\077\052\121\118\087\071\111\043\077\071\111\097\049\069\067\068\065\086\053\075\049";16394229,"\119\065\061\061",false;6;9,"\102\109\075\055\069\089\122\082\052\121\075\079\057\067\043\118\066\089\105\061","\119\053\122\079\103\053\122\049\048\121\043\057\069\067\099\055\048\111\083\083";"\120\122\050\047\043\105\086\061";"\105\109\097\106\052\057\107\049\071\117\097\083\069\089\122\084\048\051\107\074\054\051\107\107\066\089\075\106\052\121\090\065\105\067\043\077\066\053\105\061";25200,"\120\109\048\053\069\089\122\079\048\086\061\061","\072\074\081\078\108\068\061\061","\048\053\088\077\069\067\071\061";"\072\111\088\078","\086\053\117\079\069\053\050\056","\102\121\097\049\052\121\075\079\108\089\081\077\052\121\118\108\066\053\050\088\103\121\050\082\103\068\081\079\102\121\070\122\108\068\061\061";"\072\051\098\113","\104\065\061\061";15,"\069\089\050\109\048\121\083\065";"\103\109\075\106\069\089\043\120\066\089\088\081\102\109\105\061",10000,"\069\109\122\056","\103\057\099\055";"\050\050\099\110\103\109\050\074\052\089\075\077\052\083\061\061";"\050\067\099\077\069\053\103\086\102\057\097\082\051\105\086\061","\048\121\070\074\048\121\086\088","\050\089\101\101\103\119\107\067\069\067\099\055\048\119\107\081\066\106\107\081\069\053\117\084\102\109\050\082\066\109\122\074\069\089\105\061","\104\082\078\076\104\082\078\076\104\082\078\076";"\103\089\122\049\069\089\105\061";"\104\115\081\056\069\067\103\079\069\089\075\101\048\111\099\122\069\121\075\109\048\121\099\087\066\111\099\122\103\053\122\122\103\082\090\080\110\120\090\083\110\082\071\073\097\120\066\082\116\115\068\073\116\115\086\049\110\082\056\106\097\084\118\119\069\067\086\065\043\067\099\077\103\049\122\090","\050\089\117\112\066\089\050\106\071\090\043\122\103\089\050\084\103\089\050\056\071\086\061\061","\105\053\050\084\069\109\118\079\048\121\097\049\052\121\118\087","\102\109\075\079\102\109\117\049";"\066\067\107\055\052\121\097\122\097\057\043\106\048\121\105\061";"\050\089\117\085\052\121\118\087","\071\089\088\077\069\067\068\113\072\065\061\061",3,"\086\105\117\086",11;18,4096,"\066\067\043\101\103\111\050\082","\043\057\099\084\069\109\073\061",100;0,"\048\109\070\101\103\089\097\098";"\105\067\043\101\066\087\043\081\069\053\066\061",1000;9999999,"\102\109\050\081\069\068\061\061",16;8,"\103\057\107\083\048\057\071\061","\047\109\070\122\066\067\097\101\048\109\050\082\047\083\061\061";3918;"\104\083\061\061","\120\089\117\082\103\119\107\050\066\089\043\101\103\089\050\056\116\074\068\061";17,"\103\057\098\070\110\049\110\061","\103\109\075\106\069\089\043\120\066\089\088\081\102\109\050\099\048\068\061\061";"\102\109\075\070\069\087\086\061",-1;"\120\109\118\055\052\121\118\122","\051\121\118\109\102\121\088\081\048\090\117\084\102\109\075\070\069\087\086\061","\103\089\050\073\103\068\061\061";4;"\105\053\050\084\069\109\118\079\048\121\097\049\048\121\086\061","\066\053\117\079\048\089\075\112";"\069\121\050\082\066\109\117\087\048\105\122\056",2,"\097\120\103\105\102\120\103\070\097\049\112\120";"\048\121\043\081\103\068\061\061";"\120\090\088\087\110\056\112\122","\066\109\050\084\069\109\118\056\105\109\050\122\048\090\122\056",65;"\104\090\068\061","\103\089\122\112\048\086\061\061";"\052\111\043\049\066\111\110\080\047\106\075\056\052\057\097\084\069\067\099\056\047\053\103\087\047\109\097\112\110\049\099\082\116\090\118\073\043\109\055\061";255;"\120\121\117\081\069\087\043\122\069\053\117\079\102\109\105\061","\072\074\098\061";"\043\067\050\122\066\067\043\110\052\121\070\081\103\068\061\061";"\086\109\117\083\103\089\097\098\102\105\088\081\069\053\055\061","\120\067\048\122\066\053\088\077\102\121\086\061",14;"\104\115\081\122\069\121\075\113\052\120\090\083\110\120\098\088\110\115\110\070\116\115\071\088\110\120\086\049\110\115\102\073\110\115\066\088\097\115\065\049\104\074\107\119\069\067\086\065\105\067\043\101\103\111\050\082\072\117\107\081\069\053\066\081";"\050\089\075\077\120\121\117\079\054\105\088\077\048\109\122\079","\072\068\061\061";"\052\121\070\101\048\109\105\061";"\103\053\117\106\052\121\117\079\103\089\088\081\066\067\086\061";1;"\086\053\117\079\069\053\050\056\120\089\075\084\102\057\043\081\069\109\073\061","\048\089\050\082\102\067\099\081\066\111\043\081\069\109\073\061",16561658,"\108\111\083\113\072\065\061\061","\043\053\122\079\052\057\097\098\048\121\086\061";"\069\121\075\056\048\050\097\049\069\067\099\101\048\109\105\061";"\103\109\075\106\069\089\043\089\052\057\099\082\103\117\097\049\069\067\099\101\048\109\050\099\048\068\061\061";"\105\067\107\055\052\121\097\081\069\053\066\061";"\104\115\081\067\069\109\088\056\116\084\056\083\116\120\066\070\097\084\090\049\097\120\071\083\110\084\071\082\110\082\110\070\097\120\073\065\050\049\075\051\120\090\086\065\105\049\050\115\050\090\122\104\120\074\107\069\103\109\075\106\069\089\043\078\072\089\101\077\103\057\071\080\069\121\122\079\072\057\088\082\103\089\117\049\103\057\097\078\048\053\075\082\066\109\122\055\057\051\107\055\069\109\075\083\116\074\068\061";"\116\065\061\061","\103\109\075\106\069\089\043\120\048\121\097\077\069\053\043\120\103\089\075\106\102\121\103\122\051\121\086\061";"\103\121\118\083\102\121\097\085","\052\121\086\061","\086\053\075\049\071\089\103\077\103\119\107\074\102\121\118\079\048\121\086\055\071\089\103\077\052\121\118\087\071\111\043\077\071\111\099\122\069\121\075\109\048\051\107\074\069\067\086\061";200,"\102\109\075\079\103\089\050\079\103\068\061\061";32,"\043\090\112\084\110\057\097\116\110\049\112\106\050\121\070\119\097\105\088\086","\105\109\050\106\103\053\050\106\086\087\050\082\054\086\061\061";"\054\086\061\061";"\072\074\081\089\102\121\088\082\048\051\098\113";"\086\053\117\056\120\053\117\112\048\105\088\122\069\053\103\049\052\068\061\061";"\048\089\117\049\048\086\061\061";"\048\053\122\106\066\067\043\120\048\121\050\056\051\121\086\061";5,"\102\057\050\049\052\089\075\106","\120\121\075\056\043\121\118\049\048\057\099\122\048\068\061\061","\048\053\066\061";19,"\120\109\118\115\069\109\118\082\069\109\088\122\120\121\050\082\066\109\117\087\048\086\061\061";"\105\109\097\106\052\057\107\049\071\090\070\101\048\089\105\065\048\087\099\077\069\051\107\107\066\089\075\106\052\121\090\065\105\067\043\077\066\053\105\061","\069\053\050\067";"\069\089\075\077\066\089\122\079\048\083\061\061";"\103\109\075\106\069\089\043\089\052\057\099\082\103\117\097\049\069\067\099\101\048\109\105\061";"\102\089\107\065";"\052\111\043\049\066\111\110\080\047\106\075\084\048\089\073\079\048\089\122\082\102\109\075\106\048\089\117\083\066\119\118\084\069\109\049\077\102\057\043\049\102\121\097\098\069\121\050\079\103\111\110\077\110\120\090\067\110\082\090\118\110\082\066\083\097\120\068\067\110\120\105\118\097\120\105\073\110\119\078\088\110\120\066\082\110\084\105\088\097\082\105\083\116\115\086\070\097\082\105\070\097\115\065\049\047\049\117\086\120\070\099\099\086\051\070\120\050\090\075\051\043\050\075\056\052\057\097\084\069\067\099\056\057\109\103\087\057\067\097\121\097\053\048\122\054\105\048\102\097\050\105\079\048\109\122\053\104\109\050\073\104\120\102\070\097\084\110\049\097\053\086\067\099\053\122\082\104\120\102\070\097\120\107\056\110\121\086\067\099\053\101\112\104\121\050\053\102\082\048\074\116\120\056\082\048\121\043\122\048\120\050\074\048\121\043\122\102\084\050\074\097\082\102\088\097\089\099\101\097\121\071\118\097\109\086\118\048\084\066\118\048\115\068\088\102\120\043\056\110\053\086\106\097\053\071\070\110\121\050\101\102\121\105\049\048\120\068\049\048\115\056\082\097\053\071\118\116\115\105\053","\116\074\065\122\048\119\098\081\116\065\061\061";"\048\089\075\079\048\086\061\061",12}for i,G in ipairs({{1;171},{1,76};{77,171}})do while G[1]<G[2]do r[G[1]],r[G[2]],G[1],G[2]=r[G[2]],r[G[1]],G[1]+1,G[2]-1 end end local function i(i)return r[i-20634]end do local i=math.floor local G=r local Q=type local d=string.char local X=table.insert local M=table.concat local B={Y=6;a=13;o=7,c=9;M=47;["\049"]=52,R=51;["\048"]=25;L=63;p=45,["\054"]=30,l=31;["\051"]=18,V=16;t=14;["\052"]=26,T=35,Z=4;U=43,j=50;X=49,u=5;I=56,D=0,G=8;e=33,["\056"]=36;B=28,s=3;["\055"]=44,n=12,f=24;E=27,W=39;x=19,["\047"]=11,y=22;N=60;d=62,F=53,["\050"]=21,r=59,q=42,O=46;h=15;z=37,k=1;H=10,["\053"]=38;b=40,J=34,K=61,["\057"]=23;["\043"]=17,Q=41,S=48,P=58;w=2,g=29;m=54,A=32;i=20;v=57,C=55}local t=string.len local h=string.sub for r=1,#G,1 do local j=G[r]if Q(j)=="\115\116\114\105\110\103"then local Q=t(j)local a={}local m=1 local T=0 local p=0 while m<=Q do local r=h(j,m,m)local G=B[r]if G then T=T+G*64^(3-p)p=p+1 if p==4 then p=0 local r=i(T/65536)local G=i((T%65536)/256)local Q=T%256 X(a,d(r,G,Q))T=0 end elseif r=="\061"then X(a,d(i(T/65536)))if m>=Q or h(j,m+1,m+1)~="\061"then X(a,d(i((T%65536)/256)))end break end m=m+1 end G[r]=M(a)end end end do local r=i(20732)local G=string[i(20797)]local Q=function()error(i(20782))end local d=i(20753)local X=pcall(function()d=i(20732)end)and d local M=math[i(20648)]local B=table[i(20784)]local t=table and table[i(20683)]or unpack local h=M(i(20788),i(20655))local j=i(20796)local a=i(20796)local m={pcall(function()local r=i(20751)-i(20653)^i(20674)return i(20689)/r end)}local T=m[i(20650)]local p=tonumber((G(tostring(T),i(20708)))())for Q=i(20671),h,i(20671)do local d=math[i(20648)](i(20671),i(20795))local X=M(i(20796),i(20659))local B=M(i(20671),d)local m=M(i(20671),i(20650))==i(20671)local A=T:gsub(i(20708),i(20681)..(tostring(M(i(20796),i(20772)))..i(20681)))local Y={pcall(function()if M(i(20671),i(20650))==i(20671)or Q==h then local Q=tonumber((G(tostring(({pcall(function()local r=i(20724)-i(20639)^i(20742)return i(20651)/r end)})[i(20650)]),i(20708)))())r=r and p==Q end if m then error(A,i(20796))end local j={}for r=i(20671),d,i(20671)do j[r]=M(i(20796),i(20659))end j[B]=X return t(j)end)}if m then r=r and(Y[i(20671)]==i(20753)and Y[i(20650)]==A)else r=r and Y[i(20671)]j=(j+Y[B+i(20671)])%i(20718)a=(a+X)%i(20718)end end r=r and j==a if r then else repeat return(function()while i(20732)do l1,l2=l2,l1 Q()end end)()until i(20732)while i(20732)do l2=M(i(20671),i(20754))if l2>i(20650)then l2=tostring(l1)else l1=l2 end end return end end skipFarm=i(20671)userings={}splicer={}str1={}str2={}tileSplice={}statusWorld={}waktu={}foss={}bot=getBot()world=bot:getWorld()inventory=bot:getInventory()firstSeedId=Bots[(getBot())[i(20733)]:upper()][i(20695)]secondSeedId=Bots[(getBot())[i(20733)]:upper()][i(20654)]looping=Bots[(getBot())[i(20733)]:upper()][i(20704)]splice5tree=Bots[(getBot())[i(20733)]:upper()][i(20785)]worldSplice=Bots[(getBot())[i(20733)]:upper()][i(20771)]worldSpliceId=Bots[(getBot())[i(20733)]:upper()][i(20640)]modeStorage=Bots[(getBot())[i(20733)]:upper()][i(20677)]worldFirstStorage=Bots[(getBot())[i(20733)]:upper()][i(20705)]worldFirstStorageId=Bots[(getBot())[i(20733)]:upper()][i(20678)]worldSecondStorage=Bots[(getBot())[i(20733)]:upper()][i(20720)]worldSecondStorageId=Bots[(getBot())[i(20733)]:upper()][i(20682)]URLwebhook=Bots[(getBot())[i(20733)]:upper()][i(20775)]messageId=Bots[(getBot())[i(20733)]:upper()][i(20649)]stop=#Bots[(getBot())[i(20733)]:upper()][i(20771)]lastFirst=#Bots[(getBot())[i(20733)]:upper()][i(20705)]lastSecond=#Bots[(getBot())[i(20733)]:upper()][i(20720)]getLastFirst=worldFirstStorage[lastFirst]getLastSecond=worldSecondStorage[lastSecond]spliceRange=i(20696)nuked=i(20753)loopIngfo=i(20725)splcIngfo=i(20725)loopz=i(20796)resetTime=i(20753)qepwi8uzoBOd1rpkc28FWccXTvK450p533EKyBbuaPUOBhcuVEFQh6DAzPkcvHtzIqJVwQkr1YtskatcMQVHno4idgRdcWDuGs0kcnrgpXw5LOJUvDP6HWOdboKsle3p=LG1xLhKZE3H1WXfNxdjMdMPHsztmFVJeMkOONL3q0HwaWijwSz2J0nggvfg74GgF6PcFG4V2nNjapTywZCBrCFWSgzPTgte84ozR5RmCRyRInnJ5RuWHtJHkxgl1XIZ6tOGb014CyxdghKHFKBy3GWPCWMqY7LoBZZFlZv6S0ld29Q3ZK2qjHYaxhNgm1nfxoyLIX2ZctRhpVtWD3yrfcVc1dRNJVzhPN3dT2GBRWrH47MMx93MVUtEwdJjANTYMWrHg01aBI5kwqz0C6pjcBwAbBovLlpy86KpX65Aat5af2fUXst9iCocYCJnkQcW2 function getBotStatus()if(getBot())[i(20793)]==i(20796)then return i(20761)elseif(getBot())[i(20793)]==i(20671)then return i(20643)elseif(getBot())[i(20793)]==i(20650)then return i(20776)elseif(getBot())[i(20793)]==i(20788)then return i(20765)elseif(getBot())[i(20793)]==i(20646)then return i(20672)elseif(getBot())[i(20793)]==i(20696)then return i(20741)elseif(getBot())[i(20793)]==i(20754)then return i(20789)elseif(getBot())[i(20793)]==i(20747)then return i(20664)elseif(getBot())[i(20793)]==i(20803)then return i(20667)elseif(getBot())[i(20793)]==i(20755)then return i(20660)elseif(getBot())[i(20793)]==i(20749)then return i(20690)elseif(getBot())[i(20793)]==i(20790)then return i(20662)elseif(getBot())[i(20793)]==i(20710)then return i(20714)elseif(getBot())[i(20793)]==i(20716)then return i(20693)elseif(getBot())[i(20793)]==i(20665)then return i(20644)elseif(getBot())[i(20793)]==i(20769)then return i(20794)elseif(getBot())[i(20793)]==i(20802)then return i(20743)elseif(getBot())[i(20793)]==i(20638)then return i(20663)elseif(getBot())[i(20793)]==i(20791)then return i(20698)elseif(getBot())[i(20793)]==i(20700)then return i(20739)else return i(20729)end end for r=skipFarm,#worldSplice,i(20671)do table[i(20719)](splicer,worldSplice[r])end for r=i(20671),#qepwi8uzoBOd1rpkc28FWccXTvK450p533EKyBbuaPUOBhcuVEFQh6DAzPkcvHtzIqJVwQkr1YtskatcMQVHno4idgRdcWDuGs0kcnrgpXw5LOJUvDP6HWOdboKsle3p,i(20671)do table[i(20719)](userings,qepwi8uzoBOd1rpkc28FWccXTvK450p533EKyBbuaPUOBhcuVEFQh6DAzPkcvHtzIqJVwQkr1YtskatcMQVHno4idgRdcWDuGs0kcnrgpXw5LOJUvDP6HWOdboKsle3p[r])end for r=i(20671),#worldFirstStorage,i(20671)do table[i(20719)](str1,worldFirstStorage[r])end for r=i(20671),#worldSecondStorage,i(20671)do table[i(20719)](str2,worldSecondStorage[r])end for r=math[i(20763)](spliceRange/i(20650)),i(20671),i(20642)do r=r*i(20642)table[i(20719)](tileSplice,r)end for r=i(20796),math[i(20801)](spliceRange/i(20650))-i(20671),i(20671)do table[i(20719)](tileSplice,r)end function tileSplicer1(r,G)for Q,d in pairs(tileSplice)do if(world:getTile(r+d,G))[i(20699)]==i(20796)and(world:getTile(r+d,G))[i(20712)]==i(20796)then return i(20732)end end return i(20753)end function tileSplicer2(r,G)for Q,d in pairs(tileSplice)do if(world:getTile(r+d,G))[i(20699)]~=i(20796)or(world:getTile(r+d,G))[i(20712)]~=i(20796)then return i(20732)end end return i(20753)end addEvent(Event[i(20670)],function(r,G)if(r:get(i(20796))):getString()==i(20701)then if((r:get(i(20671))):getString()):find(i(20778))or(((r:get(i(20671))):getString()):lower()):find(i(20770))then nuked=i(20732)end end end)function checkBlock(r)local G=world:getTile(r[i(20731)],r[i(20691)]+i(20671))if not G[i(20699)]then return i(20753)end local Q=(getInfo(G[i(20699)]))[i(20756)]return G and(Q==i(20671)or Q==i(20650)or Q==i(20788))end function checkIn1()local r=i(20796)for G,Q in pairs(world:getTiles())do if Q[i(20699)]==i(20796)and(checkBlock(world:getTile(Q[i(20731)],Q[i(20691)]))and world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796))then r=r+i(20671)end end return r end function checkIn2()local r=i(20796)for G,Q in pairs(world:getTiles())do if Q[i(20699)]==firstSeedId and(world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)and(not Q:canHarvest()and checkBlock(world:getTile(Q[i(20731)],Q[i(20691)]))))then r=r+i(20671)end end return r end function reconnect(r,G,Q,d)if bot[i(20793)]~=i(20671)then hookInfo(i(20783))sleep(i(20795))while bot[i(20793)]~=i(20671)do bot:connect()sleep(delayReconnect)if bot[i(20793)]==i(20788)or bot[i(20793)]==i(20646)then hookInfo(i(20685))sleep(i(20795))removeBot(bot[i(20733)]:upper())end end sleep(i(20795))warping(r,G)sleep(i(20795))if Q and d then while not bot:isInTile(Q,d)do bot:findPath(Q,d)sleep(i(20795))end end hookInfo(i(20647))sleep(i(20795))end end function warping(r,G)while not bot:isInWorld(r)and not nuked do while bot[i(20793)]~=i(20671)do bot:connect()sleep(delayReconnect)if bot[i(20793)]==i(20788)or bot[i(20793)]==i(20646)then hookInfo(i(20685))sleep(i(20686))removeBot(bot[i(20733)]:upper())end end bot:sendPacket(i(20788),i(20766)..(r..(i(20746)..(G..i(20757)))))sleep(delayJoinWorld)bot:sendPacket(i(20788),i(20766)..(r..(i(20746)..(G..i(20757)))))listenEvents(delayJoinWorld/i(20799))end if G~=i(20725)then while not bot:isInWorld(r)or(world:getTile(bot[i(20731)],bot[i(20691)]))[i(20699)]==i(20754)do bot:sendPacket(i(20788),i(20766)..(r..(i(20746)..(G..i(20757)))))sleep(delayJoinWorld)bot:sendPacket(i(20788),i(20766)..(r..(i(20746)..(G..i(20757)))))sleep(delayJoinWorld)end end end function scanFloatFirst()local r=i(20796)for G,Q in pairs(world:getObjects())do if Q[i(20684)]==firstSeedId then r=r+Q[i(20641)]end end return r end function scanFloatSecond()local r=i(20796)for G,Q in pairs(world:getObjects())do if Q[i(20684)]==secondSeedId then r=r+Q[i(20641)]end end return r end function fossi(r)local G=i(20796)foss[r]=i(20796)for Q,d in pairs(((getBot()):getWorld()):getTiles())do if d[i(20699)]==i(20635)then G=G+i(20671)foss[r]=G end end return G end function lastDrop()if modeStorage==i(20748)then for r,G in pairs(str1)do if inventory:getItemCount(firstSeedId)>i(20796)then warping(G,worldFirstStorageId)sleep(i(20795))while inventory:getItemCount(firstSeedId)>i(20796)do checkUP=(world:getTile(bot[i(20731)],bot[i(20691)]-i(20671)))[i(20699)]~=i(20796)if checkUP then bot:moveRight()else bot:moveUp()end bot:setDirection()sleep(i(20795))bot:drop(firstSeedId,inventory:getItemCount(firstSeedId))end end if inventory:getItemCount(secondSeedId)>i(20796)then warping(G,worldFirstStorageId)sleep(i(20795))while inventory:getItemCount(secondSeedId)>i(20796)do checkUP=(world:getTile(bot[i(20731)],bot[i(20691)]-i(20671)))[i(20699)]~=i(20796)if checkUP then bot:moveRight()else bot:moveUp()end bot:setDirection()sleep(i(20795))bot:drop(secondSeedId,inventory:getItemCount(secondSeedId))end end end elseif modeStorage==i(20738)then for r,G in pairs(str1)do if inventory:getItemCount(firstSeedId)>i(20796)then warping(G,worldFirstStorageId)sleep(i(20795))while inventory:getItemCount(firstSeedId)>i(20796)do checkUP=(world:getTile(bot[i(20731)],bot[i(20691)]-i(20671)))[i(20699)]~=i(20796)if checkUP then bot:moveRight()else bot:moveUp()end bot:setDirection()sleep(i(20795))bot:drop(firstSeedId,inventory:getItemCount(firstSeedId))end end end for r,G in pairs(str2)do if inventory:getItemCount(secondSeedId)>i(20796)then warping(G,worldFirstStorageId)sleep(i(20795))while inventory:getItemCount(secondSeedId)>i(20796)do checkUP=(world:getTile(bot[i(20731)],bot[i(20691)]-i(20671)))[i(20699)]~=i(20796)if checkUP then bot:moveRight()else bot:moveUp()end bot:setDirection()sleep(i(20795))bot:drop(secondSeedId,inventory:getItemCount(secondSeedId))end end end end end function hookInfo(r)if webhookActive and typeWebhook==i(20711)then local G=i(20762)..((getBot())[i(20733)]..i(20675))local Q=i(20661)..(getBotStatus()..(i(20668)..((getBot()):getPing()..i(20767))))local d=i(20661)..(r..(i(20764)..(((getBot()):getWorld())[i(20733)]..i(20740))))wh=Webhook[i(20703)](URLwebhook)wh[i(20687)]=i(20656)..(userTagId..i(20768))wh[i(20777)][i(20737)]=i(20732)wh[i(20777)][i(20728)]=math[i(20648)](i(20796),i(20800))wh[i(20777)][i(20697)][i(20733)]=i(20759)wh[i(20777)][i(20697)][i(20774)]=i(20658)wh[i(20777)][i(20745)][i(20645)]=i(20637)..(os[i(20694)](i(20717),os[i(20657)]()+i(20760))..i(20725))wh[i(20777)][i(20669)]=i(20707)wh[i(20777)]:addField(i(20781),G,i(20732))wh[i(20777)]:addField(i(20666),Q,i(20732))wh[i(20777)]:addField(i(20727),d,i(20732))wh[i(20777)]:addField(i(20680)..(loopIngfo..i(20725)),i(20706)..(splcIngfo..i(20706)),i(20753))wh:send()elseif webhookActive and typeWebhook==i(20652)then local G=i(20762)..((getBot())[i(20733)]..i(20675))local Q=i(20661)..(getBotStatus()..(i(20668)..((getBot()):getPing()..i(20767))))local d=i(20661)..(r..(i(20764)..(((getBot()):getWorld())[i(20733)]..i(20740))))wh=Webhook[i(20703)](URLwebhook..(i(20805)..messageId))wh[i(20687)]=i(20656)..(userTagId..i(20768))wh[i(20777)][i(20737)]=i(20732)wh[i(20777)][i(20728)]=math[i(20648)](i(20796),i(20800))wh[i(20777)][i(20697)][i(20733)]=i(20759)wh[i(20777)][i(20697)][i(20774)]=i(20658)wh[i(20777)][i(20745)][i(20645)]=i(20637)..(os[i(20694)](i(20717),os[i(20657)]()+i(20760))..i(20725))wh[i(20777)][i(20669)]=i(20707)wh[i(20777)]:addField(i(20781),G,i(20732))wh[i(20777)]:addField(i(20666),Q,i(20732))wh[i(20777)]:addField(i(20727),d,i(20732))wh[i(20777)]:addField(i(20680)..(loopIngfo..i(20725)),i(20706)..(splcIngfo..i(20706)),i(20753))wh:send()end end function detecting()wh=Webhook[i(20703)](URLwebhook)wh[i(20687)]=i(20656)..(userTagId..i(20768))wh[i(20777)][i(20737)]=i(20732)wh[i(20777)][i(20728)]=i(20726)wh[i(20777)][i(20780)]=i(20735)wh[i(20777)][i(20673)]=i(20744)wh[i(20777)][i(20697)][i(20733)]=i(20702)wh[i(20777)][i(20697)][i(20774)]=i(20658)wh:send()end function loopInfo()loopIngfo=i(20725)if not looping then loopIngfo=loopIngfo..i(20692)else loopIngfo=loopIngfo..(i(20661)..(loopz..i(20787)))end end function timeLapse()splcIngfo=i(20725)if censorWorld then for r,G in pairs(splicer)do local Q=string[i(20804)](G)if Q then local r=string[i(20730)](Q,i(20671),censorWord)if r then splcIngfo=splcIngfo..(i(20752)..(r..(i(20746)..((waktu[Q]or i(20636))..(i(20746)..((statusWorld[Q]or i(20636))..(i(20746)..(foss[Q]or i(20715)))))))))end end end else for r,G in pairs(splicer)do splcIngfo=splcIngfo..(i(20752)..(G:upper()..(i(20746)..((waktu[G]or i(20636))..(i(20746)..((statusWorld[G]or i(20636))..(i(20746)..(foss[G]or i(20715)))))))))end end end function taking()hookInfo(i(20786))sleep(i(20795))if modeStorage==i(20748)then for r,G in pairs(str1)do warping(G,worldFirstStorageId)sleep(i(20795))local Q=scanFloatFirst()<=i(20796)or scanFloatSecond()<=i(20796)if scanFloatFirst()>i(20796)and scanFloatSecond()>i(20796)then for r,Q in pairs(world:getObjects())do if Q[i(20684)]==firstSeedId then while not bot:isInTile(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))and inventory:getItemCount(firstSeedId)<=i(20796)do bot:findPath(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))sleep(i(20795))reconnect(G,worldFirstStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end while inventory:getItemCount(firstSeedId)<=i(20796)do bot:collectObject(Q[i(20773)],i(20749))sleep(i(20795))reconnect(G,worldFirstStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end end if Q[i(20684)]==secondSeedId then while not bot:isInTile(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))and inventory:getItemCount(secondSeedId)<=i(20796)do bot:findPath(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))sleep(i(20795))reconnect(G,worldFirstStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end while inventory:getItemCount(secondSeedId)<=i(20796)do bot:collectObject(Q[i(20773)],i(20749))sleep(i(20795))reconnect(G,worldFirstStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end end if inventory:getItemCount(firstSeedId)>i(20796)and inventory:getItemCount(secondSeedId)>i(20796)then break end end if inventory:getItemCount(firstSeedId)>i(20796)and inventory:getItemCount(secondSeedId)>i(20796)then break end elseif G==getLastFirst and Q then hookInfo(i(20750))sleep(i(20795))lastDrop()sleep(i(20795))bot:leaveWorld()sleep(i(20795))bot:stopScript()end end elseif modeStorage==i(20738)then for r,G in pairs(str1)do warping(G,worldFirstStorageId)sleep(i(20795))if scanFloatFirst()>i(20796)then for r,Q in pairs(world:getObjects())do if Q[i(20684)]==firstSeedId then while not bot:isInTile(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))and inventory:getItemCount(firstSeedId)<=i(20796)do bot:findPath(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))sleep(i(20795))reconnect(G,worldFirstStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end while inventory:getItemCount(firstSeedId)<=i(20796)do bot:collectObject(Q[i(20773)],i(20749))sleep(i(20795))reconnect(G,worldFirstStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end if inventory:getItemCount(firstSeedId)>i(20796)then break end end if inventory:getItemCount(firstSeedId)>i(20796)then break end end if inventory:getItemCount(firstSeedId)>i(20796)then break end elseif G==getLastFirst and scanFloatFirst()<=i(20796)then hookInfo(i(20723))sleep(i(20795))lastDrop()sleep(i(20795))bot:leaveWorld()sleep(i(20795))bot:stopScript()end end for r,G in pairs(str2)do warping(G,worldSecondStorageId)sleep(i(20795))if scanFloatSecond()>i(20796)then for r,Q in pairs(world:getObjects())do if Q[i(20684)]==secondSeedId then while not bot:isInTile(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))and inventory:getItemCount(secondSeedId)<=i(20796)do bot:findPath(math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))sleep(i(20795))reconnect(G,worldSecondStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end while inventory:getItemCount(secondSeedId)<=i(20796)do bot:collectObject(Q[i(20773)],i(20749))sleep(i(20795))reconnect(G,worldSecondStorageId,math[i(20763)](Q[i(20731)]/i(20688)),math[i(20763)](Q[i(20691)]/i(20688)))end if inventory:getItemCount(secondSeedId)>i(20796)then break end end if inventory:getItemCount(secondSeedId)>i(20796)then break end end if inventory:getItemCount(secondSeedId)>i(20796)then break end elseif G==getLastSecond and scanFloatSecond()<=i(20796)then hookInfo(i(20722))sleep(i(20795))lastDrop()sleep(i(20795))bot:leaveWorld()sleep(i(20795))bot:stopScript()end end end end function splicing(r)hookInfo(i(20679))sleep(i(20795))bot[i(20736)]=i(20753)for G,Q in pairs(world:getTiles())do if splice5tree then if Q[i(20699)]==i(20796)and(i(20796)~=(world:getTile(Q[i(20731)],Q[i(20691)]+i(20671)))[i(20699)]and((world:getTile(Q[i(20731)],Q[i(20691)]))[i(20699)]~=seedId and((world:getTile(Q[i(20731)],Q[i(20691)]+i(20671)))[i(20699)]~=seedId and(world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)and checkBlock(world:getTile(Q[i(20731)],Q[i(20691)]))))))then local G=getTile(Q[i(20731)]+i(20650),Q[i(20691)])if G[i(20699)]==i(20796)then while not bot:isInTile(Q[i(20731)]+i(20650),Q[i(20691)])do bot:findPath(Q[i(20731)]+i(20650),Q[i(20691)])sleep(i(20795))reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end if tileSplicer1(bot[i(20731)],bot[i(20691)])then for G,d in pairs(tileSplice)do if not Q:hasFlag(i(20792))and(i(20796)~=(world:getTile(bot[i(20731)]+d,bot[i(20691)]+i(20671)))[i(20699)]and((world:getTile(bot[i(20731)]+d,bot[i(20691)]))[i(20699)]~=seedId and((world:getTile(bot[i(20731)]+d,bot[i(20691)]+i(20671)))[i(20699)]~=seedId and(world:hasAccess(bot[i(20731)]+d,bot[i(20691)])~=i(20796)and checkBlock(world:getTile(bot[i(20731)]+d,bot[i(20691)]))))))then bot:place(bot[i(20731)]+d,bot[i(20691)],firstSeedId)sleep(delayFirstSeedSplice)reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end end end else while not bot:isInTile(Q[i(20731)],Q[i(20691)])and not Q:hasFlag(i(20792))do bot:findPath(Q[i(20731)],Q[i(20691)])sleep(i(20795))reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end while not Q:hasFlag(i(20792))and(Q[i(20699)]==i(20796)and(i(20796)~=(world:getTile(Q[i(20731)],Q[i(20691)]+i(20671)))[i(20699)]and((world:getTile(Q[i(20731)],Q[i(20691)]))[i(20699)]~=seedId and((world:getTile(Q[i(20731)],Q[i(20691)]+i(20671)))[i(20699)]~=seedId and(world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)and checkBlock(world:getTile(Q[i(20731)],Q[i(20691)])))))))do bot:place(bot[i(20731)],bot[i(20691)],firstSeedId)sleep(delayFirstSeedSplice)reconnect(r,worldPlantId,Q[i(20731)],Q[i(20691)])end end end if Q[i(20699)]==firstSeedId and(not Q:canHarvest()and(world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)and checkBlock(world:getTile(Q[i(20731)],Q[i(20691)]))))then local G=getTile(Q[i(20731)]+i(20650),Q[i(20691)])if G[i(20699)]==firstSeedId then while not bot:isInTile(Q[i(20731)]+i(20650),Q[i(20691)])do bot:findPath(Q[i(20731)]+i(20650),Q[i(20691)])sleep(i(20795))reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end if tileSplicer2(bot[i(20731)],bot[i(20691)])then for G,d in pairs(tileSplice)do if not Q:hasFlag(i(20792))and((world:getTile(bot[i(20731)]+d,bot[i(20691)]))[i(20699)]==firstSeedId and(world:hasAccess(bot[i(20731)]+d,bot[i(20691)])~=i(20796)and checkBlock(world:getTile(bot[i(20731)]+d,bot[i(20691)]))))then bot:place(bot[i(20731)]+d,bot[i(20691)],secondSeedId)sleep(delaySecondSeedSplice)reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end end end else while not bot:isInTile(Q[i(20731)],Q[i(20691)])and not Q:hasFlag(i(20792))do bot:findPath(Q[i(20731)],Q[i(20691)])sleep(i(20795))reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end while not Q:hasFlag(i(20792))and((world:getTile(bot[i(20731)],bot[i(20691)]))[i(20699)]==firstSeedId and(world:hasAccess(bot[i(20731)],bot[i(20691)])~=i(20796)and checkBlock(world:getTile(bot[i(20731)],bot[i(20691)]))))do bot:place(bot[i(20731)],bot[i(20691)],secondSeedId)sleep(delaySecondSeedSplice)reconnect(r,worldPlantId,Q[i(20731)],Q[i(20691)])end end end if inventory:getItemCount(firstSeedId)<=i(20796)and inventory:getItemCount(secondSeedId)>i(20796)then break elseif inventory:getItemCount(firstSeedId)>i(20796)and inventory:getItemCount(secondSeedId)<=i(20796)then break elseif inventory:getItemCount(firstSeedId)<=i(20796)and inventory:getItemCount(secondSeedId)<=i(20796)then break end else if not Q:hasFlag(i(20792))and(Q[i(20699)]==i(20796)and(i(20796)~=(world:getTile(Q[i(20731)],Q[i(20691)]+i(20671)))[i(20699)]and((world:getTile(Q[i(20731)],Q[i(20691)]))[i(20699)]~=firstSeedId and((world:getTile(Q[i(20731)],Q[i(20691)]+i(20671)))[i(20699)]~=firstSeedId and(world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)and checkBlock(world:getTile(Q[i(20731)],Q[i(20691)])))))))then while not bot:isInTile(Q[i(20731)],Q[i(20691)])and not Q:hasFlag(i(20792))do bot:findPath(Q[i(20731)],Q[i(20691)])sleep(i(20795))reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end while not Q:hasFlag(i(20792))and(i(20796)==(world:getTile(Q[i(20731)],Q[i(20691)]))[i(20699)]and(checkBlock(world:getTile(Q[i(20731)],Q[i(20691)]))and world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)))do bot:place(Q[i(20731)],Q[i(20691)],firstSeedId)sleep(delayFirstSeedSplice)reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end end if not Q:hasFlag(i(20792))and(not Q:canHarvest()and(Q[i(20699)]==firstSeedId and(world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)and checkBlock(world:getTile(Q[i(20731)],Q[i(20691)])))))then while not bot:isInTile(Q[i(20731)],Q[i(20691)])and not Q:hasFlag(i(20792))do bot:findPath(Q[i(20731)],Q[i(20691)])sleep(i(20795))reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end while not Q:hasFlag(i(20792))and(firstSeedId==(world:getTile(Q[i(20731)],Q[i(20691)]))[i(20699)]and(world:hasAccess(Q[i(20731)],Q[i(20691)])~=i(20796)and checkBlock(world:getTile(Q[i(20731)],Q[i(20691)]))))do bot:place(Q[i(20731)],Q[i(20691)],secondSeedId)sleep(delaySecondSeedSplice)reconnect(r,worldSpliceId,Q[i(20731)],Q[i(20691)])end end if inventory:getItemCount(firstSeedId)<=i(20796)and inventory:getItemCount(secondSeedId)>i(20796)then break elseif inventory:getItemCount(firstSeedId)>i(20796)and inventory:getItemCount(secondSeedId)<=i(20796)then break elseif inventory:getItemCount(firstSeedId)<=i(20796)and inventory:getItemCount(secondSeedId)<=i(20796)then break end end end end if bot[i(20793)]~=i(20671)then bot:connect()sleep(delayReconnect)end function LockOwner()for r,i in pairs(userings)do local G=getUsername()local Q=G==i if Q then return Q end end end function main()for r,G in pairs(userings)do if LockOwner()and AporiaStore==i(20658)then while i(20732)do for r,G in pairs(splicer)do if bot[i(20793)]~=i(20671)then bot:connect()sleep(delayReconnect)end timeLapse()sleep(i(20795))loopInfo()sleep(i(20795))warping(G,worldSpliceId)sleep(i(20795))if not nuked then hookInfo(i(20798))sleep(i(20795))tt=os[i(20657)]()while checkIn1()>i(20796)or checkIn2()>i(20796)do while splicing(G)do splicing(G)end if inventory:getItemCount(firstSeedId)<=i(20796)or inventory:getItemCount(secondSeedId)<=i(20796)then taking()end warping(G,worldSpliceId)sleep(i(20795))end tt1=os[i(20657)]()-tt hookInfo(i(20676))waktu[G]=math[i(20763)](tt1/i(20713))..(i(20681)..math[i(20763)]((tt1%i(20713))/i(20734)))statusWorld[G]=i(20709)sleep(i(20795))fossi(G)elseif nuked then statusWorld[G]=i(20758)nuked=i(20753)sleep(delayReconnect*i(20650))end if skipFarm<stop then skipFarm=skipFarm+i(20671)else if resetTime then waktu={}statusWorld={}foss={}end skipFarm=i(20671)loopz=loopz+i(20671)end end if not looping then timeLapse()sleep(i(20795))lastDrop()sleep(i(20795))hookInfo(i(20721))sleep(i(20795))removeBot(bot[i(20733)]:upper())end end else detecting()sleep(i(20799))bot:say(i(20779))sleep(i(20799))bot:stopScript()end end end main()
